package type_warnings;

type Inner struct {
    int a;
}

type Number int;

Number b;

func void test1() { }

func int test2(int a, int b) { }

func Bar test3(Foo bar, int* intp) {} // error: Foo and Bar are unknown symbols

func Number test4(Number* n) {}

func void test5(main* a, bla b) {} // error: main and bla are not types

public func void main() {
    int a = (int) 10;
}

// ok
public type Faa int;
public func Faa func3(Faa f1) {}

// -- local qualifier ---
/*
local int var1; // error

func local int func4() { return 0; }    // error

func void func5(local int a) {}     // error

type Local local int;   // error
*/

public func void func6() {
    int a;
    int num = elemsof(a);   // error
    float f = 2.123455;
    if (f) {    // error
    }
}

