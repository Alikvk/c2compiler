module stdlib;

public type div_t struct {
    int32 quot;
    int32 rem;
}

public type lldiv_t struct {
    int64 quot;
    int64 rem;
}

const int32 RAND_MAX = 2147483647;      // same as Int32_max

const int32 EXIT_FAILURE = 1;
const int32 EXIT_SUCCESS = 0;

public func int32 __ctype_get_mb_cur_max () { return 0; }
public func float64 atof (const char* __nptr) { return 0; }
public func int32 atoi (const char* __nptr) { return 0; }
public func int64 atol (const char* __nptr) { return 0; }
public func int64 atoll (const char* __nptr) { return 0; }
public func float64 strtod (const char* __nptr, char** __endptr) { return 0; }
public func float32 strtof (const char* __nptr, char** __endptr) { return 0; }
public func float64 strtold (const char* __nptr, char** __endptr) { return 0; }
public func int64 strtol (const char* __nptr, char** __endptr, int32 __base) { return 0; }
public func uint64 strtoul (const char* __nptr, char** __endptr, int32 __base) { return 0; }
public func int64 strtoq (const char* __nptr, char** __endptr, int32 __base) { return 0; }
public func uint64 strtouq (const char* __nptr, char** __endptr, int32 __base) { return 0; }
public func int64 strtoll (const char* __nptr, char** __endptr, int32 __base) { return 0; }
public func uint64 strtoull (const char* __nptr, char** __endptr, int32 __base) { return 0; }
public func char* l64a (int64 __n) { return 0; }
public func int64 a64l (const char* __s) { return 0; }

public func int64 random () { return 0; }
public func void srandom (uint32 __seed) {}
public func char* initstate (uint32 __seed, char* __statebuf, int32 __statelen) { return 0; }
public func char* setstate (char* __statebuf) { return 0; }

public type random_data struct {
   int32* fptr;
   int32* rptr;
   int32* state;
   int32 rand_type;
   int32 rand_deg;
   int32 rand_sep;
   int32* end_ptr;
}

public func int32 random_r (random_data* __buf, int32* __result) { return 0; }
public func int32 srandom_r (uint32 __seed, random_data* __buf) { return 0; }
public func int32 initstate_r (uint32 __seed, char* __statebuf, int32 __statelen, random_data* __buf) { return 0; }
public func int32 setstate_r (char* __statebuf, random_data* __buf) { return 0; }
public func int32 rand () { return 0; }
public func void srand (uint32 __seed) {}
public func int32 rand_r (uint32* __seed) { return 0; }
public func float64 drand48 () { return 0; }
public func float64 erand48 (uint16* __xsubi) { return 0; }
public func int64 lrand48 () { return 0; }
public func int64 nrand48 (uint16* __xsubi) { return 0; }
public func int64 mrand48 () { return 0; }
public func int64 jrand48 (uint16* __xsubi) { return 0; }
public func void srand48 (int64 __seedval) {}
public func uint16* seed48 (uint16* __seed16v) { return 0; }
public func void lcong48 (uint16* __param) {}

public type drand48_data struct {
   uint16[3] __x;
   uint16[3] __old_x;
   uint16 __c;
   uint16 __init;
   uint64 __a;
}

public func int32 drand48_r (drand48_data* __buffer, float64* __result) { return 0; }
public func int32 erand48_r (uint16* __xsubi, drand48_data* __buffer, float64* __result) { return 0; }
public func int32 lrand48_r (drand48_data* __buffer, int64* __result) { return 0; }
public func int32 nrand48_r (uint16* __xsubi, drand48_data* __buffer, int64* __result) { return 0; }
public func int32 mrand48_r (drand48_data* __buffer, int64* __result) { return 0; }
public func int32 jrand48_r (uint16* __xsubi, drand48_data* __buffer, int64* __result) { return 0; }
public func int32 srand48_r (int64 __seedval, drand48_data* __buffer) { return 0; }
public func int32 seed48_r (uint16* __seed16v, drand48_data* __buffer) { return 0; }
public func int32 lcong48_r (uint16* __param, drand48_data* __buffer) { return 0; }

public func void free (void* __ptr) {}
public func void cfree (void* __ptr) {}
public func void* valloc (int32 __size) { return 0; }
public func int32 posix_memalign (void** __memptr, int32 __alignment, int32 __size) { return 0; }
public func void* aligned_alloc (int32 __alignment, int32 __size) { return 0; }

public func void abort () {}
public type AtExitFn func void(void);
public func int32 atexit (AtExitFn __func) { return 0; }
public func int32 at_quick_exit (AtExitFn __func) { return 0; }
public type OnExitFn func void(int32, void*);
public func int32 on_exit (OnExitFn __func, void* __arg) { return 0; }
public func void exit (int32 __status) {}
public func void quick_exit (int32 __status) {}
public func void _Exit (int32 __status) {}

public func char* getenv (const char* __name) { return 0; }
public func int32 putenv (char* __string) { return 0; }
public func int32 setenv (const char* __name, const char* __value, int32 __replace) { return 0; }
public func int32 unsetenv (const char* __name) { return 0; }
public func int32 clearenv () { return 0; }

public func int32 mkstemp (char* __template) { return 0; }
public func int32 mkstemps (char* __template, int32 __suffixlen) { return 0; }
public func char* mkdtemp (char* __template) { return 0; }
public func int32 system (const char* __command) { return 0; }
public func char* realpath (const char* __name, char* __resolved) { return 0; }
public func char* mktemp (char* __template) { return 0; }

public type __compar_fn_t func int32 (const void*, const void*);
public func void* bsearch (const void* __key, const void* __base, int32 __nmemb, int32 __size, __compar_fn_t __compar) { return 0; }
public func void qsort (void* __base, int32 __nmemb, int32 __size, __compar_fn_t __compar) {}

public func int32 abs (int32 __x) { return 0; }
public func int64 labs (int64 __x) { return 0; }
public func int64 llabs (int64 __x) { return 0; }
public func div_t div (int32 __numer, int32 __denom) { div_t t; return t; }
public func div_t ldiv (int64 __numer, int64 __denom) { div_t t; return t; }
public func lldiv_t lldiv (int64 __numer, int64 __denom) { lldiv_t t; return t; }

public func char* ecvt (float64 __value, int32 __ndigit, int32* __decpt, int32* __sign) { return 0; }
public func char* fcvt (float64 __value, int32 __ndigit, int32* __decpt, int32* __sign) { return 0; }
public func char* gcvt (float64 __value, int32 __ndigit, char* __buf) { return 0; }
public func char* qecvt (float64 __value, int32 __ndigit, int32* __decpt, int32* __sign) { return 0; }
public func char* qfcvt (float64 __value, int32 __ndigit, int32* __decpt, int32* __sign) { return 0; }
public func char* qgcvt (float64 __value, int32 __ndigit, char* __buf) { return 0; }
public func int32 ecvt_r (float64 __value, int32 __ndigit, int32* __decpt, int32* __sign, char* __buf, int32 __len) { return 0; }
public func int32 fcvt_r (float64 __value, int32 __ndigit, int32* __decpt, int32* __sign, char* __buf, int32 __len) { return 0; }
public func int32 qecvt_r (float64 __value, int32 __ndigit, int32* __decpt, int32* __sign, char* __buf, int32 __len) { return 0; }
public func int32 qfcvt_r (float64 __value, int32 __ndigit, int32* __decpt, int32* __sign, char* __buf, int32 __len) { return 0; }

public func int32 mblen (const char* __s, int32 __n) { return 0; }
public func int32 mbtowc (int32* __pwc, const char* __s, int32 __n) { return 0; }
public func int32 wctomb (char* __s, int32 __wchar) { return 0; }
public func int32 mbstowcs (int32* __pwcs, const char* __s, int32 __n) { return 0; }
public func int32 wcstombs (char* __s, const int32* __pwcs, int32 __n) { return 0; }
public func int32 rpmatch (const char* __response) { return 0; }
// TODO need to parse char* const*
//public func int32 getsubopt (char** __optionp, char*const* __tokens, char** __valuep) { return 0; }
public func int32 getsubopt (char** __optionp, char** __tokens, char** __valuep) { return 0; }
public func int32 getloadavg (float64* __loadavg, int32 __nelem) { return 0; }

