/* Copyright 2013,2014,2015 Bas van den Berg
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#include "CGenerator/MakefileGenerator.h"
#include "Utils/StringBuilder.h"
#include "FileUtils/FileUtils.h"

using namespace C2;

void MakefileGenerator::add(const std::string& filename) {
    files.push_back(filename);
}

void MakefileGenerator::write() {
    std::string targetname = target;
    if (!isExec) targetname += ".a";

    std::string args = "-O3 -Wall -Wextra -Wno-unused -Wno-unused-parameter -std=c99";

    StringBuilder out;
    out << "# WARNING: this file is auto-generated by the C2 compiler.\n";
    out << "# Any changes you make might be lost!\n\n";

    // all target
    out << "all: " << targetname << '\n';
    out << '\n';

    out << targetname << ":\n";

    // compile step
    for (FilesConstIter iter=files.begin(); iter!=files.end(); ++iter) {
        out << "\tgcc " << args << " -c " << *iter << ".c -o " << *iter << ".o\n"; 
    }
    // link step
    if (isExec) {
        out << "\tgcc -o " << targetname;
    } else {
        out << "\tar rcs " << targetname;
    }
    for (FilesConstIter iter=files.begin(); iter!=files.end(); ++iter) {
        out << ' ' << *iter << ".o";
    }
    out << "\n\n";

    // clean target
    out << "clean:\n";
    out << "\t rm -f *.o *.a " << target << '\n';
    out << '\n';

    FileUtils::writeFile(path.c_str(), path + "/Makefile", out);
}

